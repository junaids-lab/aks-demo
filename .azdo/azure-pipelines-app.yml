# azure-pipelines-app.yml

trigger:
- main # Triggers on changes to the main branch

pool:
  vmImage: 'ubuntu-latest' # Use a hosted agent

stages:
# Enable the stage BuildAndPush for dev and disable for rest
# - stage: BuildAndPush
#   displayName: 'Build and Push Docker Image'
#   jobs:
#   - job: DockerBuild
#     displayName: 'Build and Push'
#     steps:
#     - task: Docker@2
#       displayName: 'Build and Push Image'
#       inputs:
#         containerRegistry: 'aks-demo-service-connection'
#         repository: 'aks-demo-app'
#         command: 'buildAndPush'
#         Dockerfile: 'app/Dockerfile'
#         buildContext: 'app'
#         tags: 'latest'
#         arguments: '--platform linux/amd64'

- stage: DeployToAKS
  displayName: 'Deploy Application to AKS'
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    displayName: 'Deploy'
    steps:
    - task: AzureCLI@2
      displayName: 'Get AKS Credentials'
      inputs:
        azureSubscription: 'aks-demo-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group <Your-Resource-Group-Name> --name <Your-AKS-Cluster-Name> --overwrite-existing

    - task: Kubernetes@1
      displayName: 'Apply Kubernetes Manifests'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'aks-demo-service-connection'
        azureResourceGroup: '<Your-Resource-Group-Name>'
        kubernetesCluster: '<Your-AKS-Cluster-Name>'
        command: 'apply'
        arguments: '-f deploy/manifests/'

    # Enable the below part to have more pods in prod or performance testing
    # - task: AzureCLI@2
    #   displayName: 'Scale pods for performance testing'
    #   inputs:
    #     azureSubscription: 'aks-demo-service-connection'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: |
    #       kubectl scale deployment/aks-demo-deployment --replicas=$(REPLICAS_COUNT)
