# azure-pipelines-infra.yml

trigger: none # Manual trigger only

pool:
  vmImage: 'ubuntu-latest' # Use a hosted agent

variables:
- group: 'perf-demo-vars'
- name: tfstate_key
  value: '$(resource_group_name)-$(aks_cluster_name).tfstate'
- name: ARM_USE_CLI
  value: false

stages:
- stage: ProvisionInfrastructure
  displayName: 'Provision Infrastructure with Terraform'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - checkout: self # Checks out the monorepo

    # Step 1: Set SQL credentials as pipeline variables
    - task: AzureCLI@2
      displayName: 'Set Azure CLI context'
      inputs:
        azureSubscription: 'aks-demo-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "##vso[task.setvariable variable=SQL_PASSWORD;isSecret=true]$(SQL_PASSWORD)"
          echo "##vso[task.setvariable variable=SQL_USERNAME;isSecret=true]$(SQL_USERNAME)"
          
    # Step 2: Manually install Terraform
    - task: Bash@3
      displayName: 'Install Terraform'
      inputs:
        targetType: 'inline'
        script: |
          curl -sL https://releases.hashicorp.com/terraform/1.2.9/terraform_1.2.9_linux_amd64.zip -o terraform.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/

    # Step 3: Run Terraform Init, Plan, and Apply
    # Consolidate these steps into a single task to ensure proper authentication context
    - task: AzureCLI@2
      displayName: 'Run Terraform Commands'
      inputs:
        azureSubscription: 'aks-demo-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        addSpnToEnvironment: true
        inlineScript: |
          # Set explicit environment variables for Terraform authentication
          # This is the most reliable method for automated pipelines
          export ARM_CLIENT_ID=$(servicePrincipalId)
          export ARM_TENANT_ID=$(tenantId)
          export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)

          # Terraform Init
          echo "##[section]Initializing Terraform Backend"
          terraform -chdir=infra init \
            -backend-config="resource_group_name=terraform-backend-rg" \
            -backend-config="storage_account_name=aksdemotfstate001" \
            -backend-config="container_name=aksdemotfstate" \
            -backend-config="key=$(tfstate_key)"

          # Terraform Validate
          echo "##[section]Validating Terraform Code"
          terraform -chdir=infra validate

          # Terraform Format (optional, but good practice)
          echo "##[section]Formatting Terraform Code"
          terraform -chdir=infra fmt

          # Terraform Plan
          echo "##[section]Running Terraform Plan"
          terraform -chdir=infra plan

          # Terraform Apply
          echo "##[section]Running Terraform Apply"
          terraform -chdir=infra apply -auto-approve