# azure-pipelines-infra.yml

trigger: none # Manual trigger only

pool:
  vmImage: 'ubuntu-latest' # Use a hosted agent

stages:
- stage: ProvisionInfrastructure
  displayName: 'Provision Infrastructure with Terraform'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - checkout: self # Checks out the monorepo

    - task: AzureCLI@2
      displayName: 'Set Azure CLI context'
      inputs:
        azureSubscription: 'aks-demo-service-connection' # Use your service connection name here
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "##vso[task.setvariable variable=SQL_PASSWORD;isSecret=true]$(SQL_PASSWORD)"
          echo "##vso[task.setvariable variable=SQL_USERNAME;isSecret=true]$(SQL_USERNAME)"

    - task: Bash@3
      displayName: 'Install Terraform'
      inputs:
        targetType: 'inline'
        script: |
          curl -sL https://releases.hashicorp.com/terraform/1.2.9/terraform_1.2.9_linux_amd64.zip -o terraform.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/

    - task: TerraformInstaller@0
      displayName: 'Install Terraform CLI'
      inputs:
        terraformVersion: '1.2.9'

    - task: Bash@3
      displayName: 'Terraform Init'
      inputs:
        targetType: 'inline'
        script: |
          terraform -chdir=infra init -backend-config="resource_group_name=<Your-TF-Backend-RG>" -backend-config="storage_account_name=<Your-TF-Backend-SA>" -backend-config="container_name=<Your-TF-Backend-Container>" -backend-config="key=$(Environment)-aks-sql.tfstate"
          
    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: 'infra'
        environmentServiceName: 'aks-demo-service-connection' # Use your service connection name here
        
    - task: TerraformTaskV4@4
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: 'infra'
        environmentServiceName: 'aks-demo-service-connection' # Use your service connection name here