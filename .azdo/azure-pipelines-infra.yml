# azure-pipelines-infra.yml

trigger: none # Manual trigger only

pool:
  vmImage: 'ubuntu-latest' # Use a hosted agent

variables:
- group: 'perf-demo-vars'
- name: tfstate_key
  value: '$(resource_group_name)-$(aks_cluster_name).tfstate'
- name: ARM_USE_CLI
  value: false

stages:
- stage: ProvisionInfrastructure
  displayName: 'Provision Infrastructure with Terraform'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    steps:
    - checkout: self

    # Step 1: Set SQL credentials as pipeline variables
    - task: AzureCLI@2
      displayName: 'Set Azure CLI context'
      inputs:
        azureSubscription: 'aks-demo-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "##vso[task.setvariable variable=SQL_PASSWORD;isSecret=true]$(SQL_PASSWORD)"
          echo "##vso[task.setvariable variable=SQL_USERNAME;isSecret=true]$(SQL_USERNAME)"

    # Step 2: Install Terraform CLI using the official task
    # This is much more reliable than a manual script
    - task: TerraformInstaller@0
      displayName: 'Install Terraform CLI'
      inputs:
        terraformVersion: '1.2.9'

    # Step 3: Run all Terraform commands in a single AzureCLI task
    # This ensures a consistent environment and proper authentication
    - task: AzureCLI@2
      displayName: 'Run Terraform Commands'
      inputs:
        azureSubscription: 'aks-demo-service-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        # Crucial for authentication. The service principal's credentials are now available as environment variables.
        addSpnToEnvironment: true
        inlineScript: |
          # The service principal credentials are automatically set as environment variables by the task.
          # We don't need to manually run 'az login'.
          
          # Terraform Init with -reconfigure
          echo "##[section]Initializing Terraform Backend"
          terraform -chdir=infra init -reconfigure \
            -backend-config="resource_group_name=terraform-backend-rg" \
            -backend-config="storage_account_name=aksdemotfstate001" \
            -backend-config="container_name=aksdemotfstate" \
            -backend-config="key=$(tfstate_key)"

          # Terraform Validate
          echo "##[section]Validating Terraform Code"
          terraform -chdir=infra validate

          # Terraform Format
          echo "##[section]Formatting Terraform Code"
          terraform -chdir=infra fmt

          # Terraform Plan and create the plan file
          echo "##[section]Running Terraform Plan"
          terraform -chdir=infra plan -out=tfplan

          # Terraform Apply using the plan file
          echo "##[section]Running Terraform Apply"
          terraform -chdir=infra apply -auto-approve tfplan